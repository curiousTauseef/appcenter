project(AppCenter)

cmake_minimum_required(VERSION 3.0.0 FATAL_ERROR)
cmake_policy(VERSION 3.4.1)

# Instruct CMake to run moc and rrc automatically when needed
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

# Apple-specific configuration
set(APPLE_SUPPRESS_X11_WARNING ON)

# Set version
set(PROJECT_VERSION "0.1.0")
set(PROJECT_VERSION_MAJOR 0)
set(PROJECT_VERSION_MINOR 1)
set(PROJECT_VERSION_PATCH 0)
set(PROJECT_SOVERSION 0)

if(NOT USE_SUPERBUILD)
    # Set up packaging
    set(CPACK_PACKAGE_NAME "qmlos-appcenter")
    set(CPACK_PACKAGE_VERSION "${PROJECT_VERSION}")
    set(CPACK_GENERATOR "TGZ")
    set(CPACK_SET_DESTDIR FALSE)
    set(CPACK_SOURCE_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}")
    set(CPACK_SOURCE_IGNORE_FILES "/build/;/.git;/.tx/;~$;${CPACK_SOURCE_IGNORE_FILES}")
    include(CPack)
    add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)
endif()

# ECM
find_package(ECM 1.7.0 REQUIRED NO_MODULE)
list(APPEND CMAKE_MODULE_PATH
     "${ECM_MODULE_PATH}"
     "${ECM_KDE_MODULE_DIR}"
     "${CMAKE_CURRENT_SOURCE_DIR}/cmake"
)

# Macros
include(FeatureSummary)
include(KDEInstallDirs)
include(KDECompilerSettings)
include(KDECMakeSettings)

# Build flags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden -fvisibility-inlines-hidden -Werror -Wall -Wextra -Wformat -Wswitch-default -Wunused-parameter -pedantic -std=c++11")

# Assume release build by default
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE "RelWithDebInfo" CACHE STRING "" FORCE)
endif()

# Find Qt5
set(REQUIRED_QT_VERSION "5.7.0")
find_package(Qt5 ${REQUIRED_QT_VERSION} CONFIG REQUIRED COMPONENTS
             Xml Concurrent Gui Qml Quick QuickControls2)

# Find KF5
set(REQUIRED_KF5_VERSION "5.8.0")
find_package(KF5 ${REQUIRED_KF5_VERSION} REQUIRED COMPONENTS
             Archive Notifications)

# Find Hawaii
set(REQUIRED_HAWAII_VERSION "0.8.0")
find_package(Hawaii ${REQUIRED_HAWAII_VERSION} REQUIRED)

# Find Flatpak
find_package(Flatpak REQUIRED)

# Install the desktop and appdata files
install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/data/io.papyros.AppCenter.desktop
        DESTINATION ${CMAKE_INSTALL_DATADIR}/applications)
install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/data/io.papyros.AppCenter.notifyrc
        DESTINATION ${CMAKE_INSTALL_DATADIR}/knotifications5)
install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/data/io.papyros.AppCenter.appdata.xml
        DESTINATION ${CMAKE_INSTALL_METAINFODIR})

# Subdirectories
add_subdirectory(app)
add_subdirectory(declarative)
add_subdirectory(framework)
add_subdirectory(notifier)

# Display feature summary
feature_summary(WHAT ALL FATAL_ON_MISSING_REQUIRED_PACKAGES)
